#!/usr/bin/env bash

set -Eeuo pipefail

readonly WD="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

readonly IMAGE="$(bash "${WD}/image" "$@")"
readonly IMAGE_VERSION=$(echo -n "${IMAGE}" | cut -d':' -f2)

readonly PARENT_IMAGE='debian:buster'

readonly USAGE='
Usage: build TMUX_VERSION
'

build_container=''
build_mount=''
main_container=''
main_mount=''

trap cleanup EXIT INT TERM

cleanup() {
  echo 'Cleanup...'
  remove_container "${build_container}" "${build_mount}"
  remove_container "${main_container}" "${main_mount}"
}

remove_container() {
  local -r container="$1"
  local -r mount="$2"
  [[ -z "${container}" ]] && return
  if [[ -n "${mount}" ]]; then
    buildah unmount "${container}" || true
  fi
  buildah rm "${container}" || true
}

echo_usage_and_exit() {
  echo "${USAGE}"
  exit
}

check_tmux_version() {
  local -r version="$1"
  [[ -n "${version}" ]] && return
  echo_usage_and_exit
}

check_image_presence() {
  [[ $(buildah images --format='{{.Name}}:{{.Tag}}' | grep -c "^localhost/${IMAGE}$") -eq 0 ]] && return
  echo "Image ${IMAGE} is already built"
  exit
}

create_and_mount_container() {
  local -n container="$1"
  local -n mount="$2"
  container=$(buildah from "${PARENT_IMAGE}")
  mount=$(buildah mount "${container}")
}

build_tmux() {
  local -r tmux_version="$1"
  local options='set -Eeuo pipefail'
  [[ -n "${DEBUG:-}" ]] && options='set -Eeuxo pipefail'
  buildah run "${build_container}" bash -c "
    ${options}

    DEBIAN_FRONTEND=noninteractive apt-get -qq update
    DEBIAN_FRONTEND=noninteractive apt-get -qq install -y --no-install-recommends \
      bison \
      build-essential \
      ca-certificates \
      libevent-dev \
      ncurses-dev \
      pkg-config \
      wget

    cd /tmp
    wget -O tmux-${tmux_version}.tar.gz https://github.com/tmux/tmux/releases/download/${tmux_version}/tmux-${tmux_version}.tar.gz
    tar -xzf tmux-${tmux_version}.tar.gz
    cd tmux-${tmux_version}
    ./configure --enable-static
    make
    make install
  "
}

copy_tmux() {
  cp -r "${build_mount}/usr/bin/tmux" "${main_mount}/usr/bin/tmux"
}

configure_image_metadata() {
  buildah config --author 'Igor Sidorov <igor.sidorov@binarycode.ru>' "${main_container}"
  buildah config --label "version=${IMAGE_VERSION}" "${main_container}"
}

commit_container() {
  buildah commit "${main_container}" "${IMAGE}"
}

main() {
  [[ -n "${DEBUG:-}" ]] && set -x;

  local -r tmux_version="${1:-}"
  check_tmux_version "${tmux_version}"

  check_image_presence

  echo 'Creating containers...'
  create_and_mount_container build_container build_mount
  create_and_mount_container main_container main_mount

  echo 'Building tmux...'
  build_tmux "${tmux_version}"

  echo 'Copying tmux...'
  copy_tmux

  echo 'Creating image...'
  configure_image_metadata
  commit_container
}

main "$@"
